version: "3"
services:
  postgres-db:
    image: library/postgres:13
    container_name: my_postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  gateway-service:
    # Берем Dockerfile из каталога reservation
    build: ./gateway
    # Запускаем тестовый сервер
    command: python manage.py runserver 0.0.0.0:8000
    # куда будут помещены данные из каталога reservation
    volumes:
      - ./gateway/:/usr/src/gateway
    # Открываем порт 8000 внутри и снаружи
    ports:
      - 8000:8000

  reservation-service:
    # Берем Dockerfile из каталога reservation
    build: ./reservation
    # Запускаем тестовый сервер
    #command: python manage.py runserver 0.0.0.0:8001
    command: /bin/sh -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8001"
    # куда будут помещены данные из каталога reservation
    volumes:
      - ./reservation/:/usr/src/reservation
    # Открываем порт 8000 внутри и снаружи
    ports:
      - 8001:8001

  loyalty-service:
    # Берем Dockerfile из каталога reservation
    build: ./loyalty
    # Запускаем тестовый сервер
    #command: python manage.py runserver 0.0.0.0:8001
    command: /bin/sh -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8003"
    # куда будут помещены данные из каталога reservation
    volumes:
      - ./loyalty/:/usr/src/loyalty
    # Открываем порт 8000 внутри и снаружи
    ports:
      - 8003:8003

  payment-service:
    # Берем Dockerfile из каталога reservation
    build: ./payment
    # Запускаем тестовый сервер
    #command: python manage.py runserver 0.0.0.0:8001
    command: /bin/sh -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8002"
    # куда будут помещены данные из каталога reservation
    volumes:
      - ./payment/:/usr/src/payment
    # Открываем порт 8000 внутри и снаружи
    ports:
      - 8002:8002


volumes:
  db-data: